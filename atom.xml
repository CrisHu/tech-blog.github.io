<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PL03188198</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huile.moe/"/>
  <updated>2018-08-24T22:53:33.073Z</updated>
  <id>http://huile.moe/</id>
  
  <author>
    <name>huile</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Build ELK in Docker</title>
    <link href="http://huile.moe/build-elk-in-docker/"/>
    <id>http://huile.moe/build-elk-in-docker/</id>
    <published>2018-05-29T10:00:00.000Z</published>
    <updated>2018-08-24T22:53:33.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Before-build"><a href="#Before-build" class="headerlink" title="Before build"></a>Before build</h2><p>There is a virtual work scene.The data is fast growth, caused mysql can&apos;t meet the needs of searching from huge data immediately. Just like using &apos;like&apos; in mysql select from millions of users data by &apos;user_name&apos; could cause service halt or request timeout. In order to adjust new demand such like this situation in modern IT work, the traditional SQL have been replaced partly by the elasticsearch which is a highly scalable open-source full-text search and analytics engine.Use it for the first time,let us think es as traditional db can store data.In this doc we just use it without introduction and <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html" target="_blank" rel="noopener">the full document(6.2.4)</a> is here(other softwares&apos; offical doc will be also paste out).<br>When you elasticsearch env has been built, there is a GUI console to interact with the port:9200 called <a href="https://www.elastic.co/guide/en/kibana/current/index.html" target="_blank" rel="noopener">Kinbana(6.2.4)</a> makes you use rest-api efficently.<br>And sometimes old web release system can&apos;t be stoped, so in the above case we would use <a href="https://www.elastic.co/guide/en/logstash/current/index.html" target="_blank" rel="noopener">Logstash(6.2.4)</a> to solve data consistency between mysql and new elasticsearch cluster.<br>My build env is on MacOS with 16G Mem, and the ELK docker structure is as blow.<br><img src="/build-elk-in-docker/structure.jpg"></p><h2 id="ES-cluster"><a href="#ES-cluster" class="headerlink" title="ES cluster"></a>ES cluster</h2><p>Above all, we should create a new network:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create network_es</span><br></pre></td></tr></table></figure></p><p>It is a virtual network for elk partner interacting each other conveniently.<br>And pull the ES image from dockerhub:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span><br></pre></td></tr></table></figure></p><p>Let us run our first elasticsearch container is as master node:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name es<span class="_">-a</span> --network network_es -p 127.0.0.1:9200:9200 -p 127.0.0.1:9300:9300 --memory=<span class="string">"2G"</span> -e ES_JAVA_OPTS=<span class="string">"-Xms1G -Xmx1G"</span> -e ELASTIC_PASSWORD=MagicWord -v /Users/your_name/db/es/es_conf/es-a.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /Users/your_name/db/es/es<span class="_">-a</span>:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span><br></pre></td></tr></table></figure></p><p>The above docker command run an elasticsearch container, which is in network named network_es. Only ports 9200 and 9300 are opened that the first port 9200 for receiving requests and the 9300 for nodes communication. The &apos;–memory=”2G”&apos; part is statement for this container&apos;s memory cache is 2G. The next parameter &apos;ES_JAVA_OPTS=”-Xms1G -Xmx1G”&apos; sets java heap space bacause of elasticsearch runing on the jvm env. And then the rest parameters are simple just like setting elasticsearch authentication password, mounting config files, data local store and assigning the elasticsearch image. The rest nodes are different in name and config.yml runed by:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name es-b --network network_es -p 127.0.0.1:9201:9200 -p 127.0.0.1:9301:9300 --memory=<span class="string">"2G"</span> -e ES_JAVA_OPTS=<span class="string">"-Xms1G -Xmx1G"</span> -e ELASTIC_PASSWORD=MagicWord -v /Users/your_name/db/es/es_conf/es-b.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /Users/your_name/db/es/es-b:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span><br><span class="line">docker run -d --name es-c --network network_es -p 127.0.0.1:9202:9200 -p 127.0.0.1:9302:9300 --memory=<span class="string">"2G"</span> -e ES_JAVA_OPTS=<span class="string">"-Xms1G -Xmx1G"</span> -e ELASTIC_PASSWORD=MagicWord -v /Users/your_name/db/es/es_conf/es-c.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /Users/your_name/db/es/es-c:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.2.4</span><br></pre></td></tr></table></figure></p><p>There are three docker commands to run elasticsearch nodes and what counts is the config.yml files show us how does the elasticsearch cluster distinguish master or slave node between total nodes and make them to be one elasticsearch from the outside.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">es-a.yml</span><br><span class="line"></span><br><span class="line">cluster.name: <span class="string">"es_cluster"</span>    <span class="comment"># cluster name</span></span><br><span class="line">node.name: master    <span class="comment"># node a is named master</span></span><br><span class="line">node.master: <span class="literal">true</span>    <span class="comment"># it is the master</span></span><br><span class="line">node.data: <span class="literal">true</span>    <span class="comment"># it stores data</span></span><br><span class="line">network.bind_host: 0.0.0.0    <span class="comment"># the service is open to all</span></span><br><span class="line">network.publish_host: es<span class="_">-a</span>    <span class="comment"># host name</span></span><br><span class="line"></span><br><span class="line">es-b.yml</span><br><span class="line"></span><br><span class="line">cluster.name: <span class="string">"es_cluster"</span></span><br><span class="line">node.name: node</span><br><span class="line">node.master: <span class="literal">false</span></span><br><span class="line">network.bind_host: 0.0.0.0</span><br><span class="line">network.publish_host: es-b</span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"es-a"</span>]    <span class="comment"># es function discovery</span></span><br><span class="line"></span><br><span class="line">es-c.yml</span><br><span class="line"></span><br><span class="line">cluster.name: <span class="string">"es_cluster"</span></span><br><span class="line">node.name: node</span><br><span class="line">node.master: <span class="literal">false</span></span><br><span class="line">network.bind_host: 0.0.0.0</span><br><span class="line">network.publish_host: es-c</span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"es-a"</span>]</span><br></pre></td></tr></table></figure></p><p>With the docker running, ES containers also start up. The next, we use command &apos;curl&apos; to test the es running status:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">'http:/es-a:9200/_cat/health?v'</span></span><br><span class="line">epoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1528080741 10:52:21  elasticsearch green           1         1      5   5    0    0        0             0                  -                100.0%</span><br></pre></td></tr></table></figure></p><p>BTW, if u want to build es without docker, please add a new user to startup es for that root user can not.</p><h2 id="Kibana-amp-Logstash"><a href="#Kibana-amp-Logstash" class="headerlink" title="Kibana &amp; Logstash"></a>Kibana &amp; Logstash</h2><p>docker part<br>kibana install &amp; config &amp; test<br>logstash install &amp; config &amp; test</p><h2 id="Summarize"><a href="#Summarize" class="headerlink" title="Summarize"></a>Summarize</h2><p>Fighting!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Before-build&quot;&gt;&lt;a href=&quot;#Before-build&quot; class=&quot;headerlink&quot; title=&quot;Before build&quot;&gt;&lt;/a&gt;Before build&lt;/h2&gt;&lt;p&gt;There is a virtual work scene.
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="http://huile.moe/tags/elasticsearch/"/>
    
      <category term="docker" scheme="http://huile.moe/tags/docker/"/>
    
  </entry>
  
</feed>
